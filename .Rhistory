if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}
close(con)
# Pre-processing the movie information to avoid problems with comma
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}
close(con)
# Pre-processing the movie information to avoid problems with comma
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(movieDataWeb$Response == "TRUE"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
# Pre-processing the movie information to avoid problems with comma
# And adding some extra data
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(movieDataWeb$Response == "True"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
close(con)
install.packages(xml2)
install.packages("xml2")
# Pre-processing the movie information to avoid problems with comma
# And adding some extra data
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(movieDataWeb$Response == "True"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
close(con)
# Pre-processing the movie information to avoid problems with comma
# And adding some extra data
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(movieDataWeb$Response == "True"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
close(con)
# Pre-processing the movie information to avoid problems with comma
# And adding some extra data
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(requestMovieData$status_code == 200){
if(movieDataWeb$Response == "True"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
}
# Pre-processing the movie information to avoid problems with comma
# And adding some extra data
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(requestMovieData$status_code == 200){
if(movieDataWeb$Response == "True"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data2, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
}
close(con)
# Pre-processing the movie information to avoid problems with comma
# And adding some extra data
# Load library
library(httr)
# Defining the file name
fileName <- "./data/movie_titles.txt"
fileNameCleaned <- "./data/movie_titles_clean.txt"
fileNameActors <- "./data/movie_with_actors.txt"
# Loading one line per iteration, changing the value and writting the
# result in a new file, source = http://stackoverflow.com/a/28281908
con  <- file(fileName, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
# Using gsub to separate the title from other data per movie
movie_title <- gsub("^([^,]*,[^,]*),", "", oneLine)
movie_data_without_title <- sub("^([^,]*,[^,]*,).*", "\\1", oneLine)
# Replacing comma for semicolon as separator
movie_data_without_title <- gsub(",", ";", movie_data_without_title)
# Adding data about genre, language and country in the movie
# Request execution
requestMovieData <- GET(
"http://www.omdbapi.com/?",
query = list(t = movie_title)
)
# Getting the content in json format
movieDataWeb <- content(requestMovieData, "parsed", encoding = "UTF-8")
if(requestMovieData$status_code == 200){
if(movieDataWeb$Response == "True"){
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
movieDataWeb$Genre, ";",
movieDataWeb$Language, ";",
movieDataWeb$Country)
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
# Getting actors data and parsing it
if(movieDataWeb$Actors != "N/A"){
actors <- strsplit(movieDataWeb$Actors, ",")[[1]]
# For loop with actors
if(length(actors) > 0){
for(i in 1:length(actors)){
movie_data2 <- paste0(movie_data, ";", actors[i])
# Writting the final data in a different file
write(movie_data2, file = fileNameActors, append = TRUE)
}
}
}
}else{
# Join all the data using semicolon
movie_data <- paste0(movie_data_without_title,
movie_title, ";",
"NULL;",
"NULL;",
"NULL")
# Writting the final data in a file
write(movie_data, file = fileNameCleaned, append = TRUE)
}
}
}
source("cleaningDataset.R")
fileNameCleaned <- "./data/movie_titles_clean.txt"
movies <- read.csv2(fileNameCleaned,
header = FALSE, col.names = c("id", "year", "title", "genre", "language", "country"),
colClasses = c("integer", "character", "character", "character", "character", "character"),
comment.char = "", na.strings = "NA")
fileNameCleaned <- "./data/movie_titles_clean.txt"
movies <- read.csv2(fileNameCleaned,
header = FALSE, col.names = c("id", "year", "title", "genre", "language", "country"),
colClasses = c("integer", "character", "character", "character", "character", "character"),
comment.char = "", na.strings = "NA")
languages <- as.factor(movies$language)
str(languages)
str(movies)
country <- as.factor(movies$country)
head(country)
head(languages)
fileNameActors <- "./data/movie_with_actors.txt"
actors <- read.csv2(fileNameActors,
header = FALSE, col.names = c("id", "year", "title", "genre", "language", "country", "actor"),
colClasses = c("integer", "character", "character", "character", "character", "character", "character"),
comment.char = "", na.strings = "NA")
actors <- as.factor(actors$actor)
hist(actors)
hist(as.integer(levels(actors)))
hist(as.numeric(levels(actors)))
hist(levels(actors))
as.numeric(levels(actors))[actors]
head(actors)
str(actors)
levels(actors)
head(levels(actors))
head(levels(actors))[1]
head(levels(actors))[1][1]
head(levels(actors))[[1]]
x <- as.numeric(levels(actors))[actors]
head(x)
tail(x)
x <- as.numeric(table(actors))
head(x)
hist(x)
head(table(actors))
str(actors)
summary(actors)
source("cleaningDataser.R")
source("cleaningDataset.R")
